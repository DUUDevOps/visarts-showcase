{"version":3,"sources":["firebaseConfig.js","Components/SubmissionSuccess.js","Components/SubmissionForm.js","Components/VotingAllSubmissions.js","Components/VotingMain.js","Components/VotingSignIn.js","Components/AdminMain.js","Components/AdminSignIn.js","App.js","serviceWorker.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","SubmissionSuccess","props","this","name","React","Component","initialState","firstName","lastName","netId","grade","title","medium","year","description","image","url","dimensions","submitted","loading","attemptedToSubmit","SubmissionForm","state","handleChange","bind","handleFiles","validateInput","setState","event","target","value","img","files","preventDefault","stateObj","window","scrollTo","handleSubmit","file","storageRef","storage","ref","Date","getFullYear","put","then","getDownloadURL","urlResult","pushToDatabase","console","log","submissionsRef","database","submission","push","className","align","Alert","color","Form","onSubmit","FormGroup","Label","Input","invalid","type","placeholder","onChange","FormFeedback","CustomInput","id","Button","Spinner","VotingAllSubmissions","currentUser","user","submissions","voterRef","uid","dataArr","on","snapshot","val","snap","votesObj","dataObj","userVote","cell","row","href","src","width","height","columns","dataField","text","formatter","imgFormatter","sort","bootstrap4","hover","keyField","data","defaultSorted","order","headerClasses","unvotedSubmissions","currentSubmission","currentVote","unVotedOn","VotingMain","handleChangeVote","handleNext","handlePrevious","handleUnvotedOnState","newState","unvotedState","objToAdd","textContent","votersRef","vote","newUnvotedArr","indexToRemove","indexOf","splice","length","update","index","displayName","ButtonGroup","outline","onClick","active","placeholderRating","firebaseAppAuth","auth","providers","googleProvider","GoogleAuthProvider","VotingSignIn","signOut","signInWithGoogle","style","position","top","right","withFirebaseAuth","AdminMain","deleteAllSubmissions","dataBuild","votes","allVoters","voter","snp","voteValue","submissionsArr","Object","keys","forEach","alert","totalFormatter","AdminSignIn","App","basename","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4cff730e.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAxi0R0RARe2uX8afqlzXrBC7_ilIjgd7Y\",\r\n    authDomain: \"visarts-showcase.firebaseapp.com\",\r\n    databaseURL: \"https://visarts-showcase.firebaseio.com\",\r\n    projectId: \"visarts-showcase\",\r\n    storageBucket: \"visarts-showcase.appspot.com\",\r\n    messagingSenderId: \"939119617819\",\r\n    appId: \"1:939119617819:web:1b50e3b920b6ee3e6a15be\",\r\n    measurementId: \"G-2LCJJDS2VZ\"\r\n    };\r\n\r\n//   // Initialize Firebase\r\n//   firebase.initializeApp(firebaseConfig);\r\n//   firebase.analytics();\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nexport default firebaseApp;","import React from 'react';\r\n\r\nclass SubmissionSuccess extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <h3>Thank you for your submission, {this.props.name}!</h3>\r\n        );\r\n    }\r\n}\r\nexport default SubmissionSuccess;","import React from 'react';\r\nimport { Alert, FormFeedback, Spinner, Col, Button, Form, FormGroup, Label, Input, Container, CustomInput } from 'reactstrap';\r\nimport firebaseApp from '../firebaseConfig';\r\nimport '../App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\r\nimport SubmissionSuccess from './SubmissionSuccess';\r\n\r\n\r\nconst initialState = {\r\n    firstName: '',\r\n    lastName: '',\r\n    netId: '',\r\n    grade: '',\r\n    title: '',\r\n    medium: '',\r\n    year: '',\r\n    description: '',\r\n    image: null,\r\n    url: '',\r\n    dimensions: '',\r\n    submitted: false,\r\n    loading: false,\r\n    attemptedToSubmit: false\r\n};\r\n\r\n\r\nclass SubmissionForm extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = initialState;\r\n\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    //this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleFiles = this.handleFiles.bind(this);\r\n    this.validateInput = this.validateInput.bind(this);\r\n  }\r\n\r\nresetState(){\r\n    this.setState(initialState);\r\n}\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    \r\n    this.setState({\r\n        [name]: value\r\n    });\r\n  }\r\n\r\n  handleFiles(event){\r\n    const img = event.target.files[0];\r\n    this.setState({\r\n      image: img\r\n    });\r\n    //   if (event.target.files[0]){\r\n          \r\n    //   }\r\n  }\r\n\r\n  validateInput(event){\r\n    event.preventDefault();\r\n    var stateObj = this.state;\r\n    if (stateObj.firstName == '' || stateObj.lastName == '' || stateObj.netId == '' ||\r\n            stateObj.grade == '' || stateObj.image == null || stateObj.title == '' || \r\n            stateObj.description == '' || stateObj.medium == '' || stateObj.dimensions == '' || \r\n            stateObj.year == ''){\r\n\r\n        window.scrollTo(0, 0)\r\n        this.setState({attemptedToSubmit: true});\r\n    }\r\n    else{\r\n        this.setState({attemptedToSubmit: false});\r\n\r\n        this.handleSubmit(event);\r\n    }\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    this.setState({loading: true});\r\n\r\n    /** Submit File to Firebase Storage and submission to database*/\r\n    var file = this.state.image;\r\n    var storageRef = firebaseApp.storage().ref(`Spring${new Date().getFullYear()}/${file.name}`);\r\n\r\n    storageRef.put(file).then(() => {\r\n        storageRef.getDownloadURL().then(urlResult => {\r\n            this.setState({url: urlResult});\r\n            this.pushToDatabase();\r\n            \r\n            console.log('Uploaded file successfully: ', file.name, this.state);\r\n            this.setState({\r\n                submitted: true,\r\n            });\r\n        });\r\n    })    \r\n\r\n    /**ADD THIS TO SOMEWHERE NOT HERE LMAO */\r\n    //this.resetState();\r\n\r\n\r\n  }\r\n\r\n  pushToDatabase(){\r\n    /** Submit text data to Firebase real-time database*/\r\n    var submissionsRef = firebaseApp.database().ref('submissions');\r\n    var submission = {\r\n        firstName: this.state.firstName,\r\n        lastName: this.state.lastName,\r\n        netId: this.state.netId,\r\n        grade: this.state.grade,\r\n        title: this.state.title,\r\n        medium: this.state.medium,\r\n        year: this.state.year,\r\n        dimensions: this.state.dimensions,\r\n        description: this.state.description,\r\n        url: this.state.url\r\n    };\r\n    submissionsRef.push(submission);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        \r\n        <div className=\"submissionForm\">\r\n            <h2 align=\"center\"><b>VisArts Spring {new Date().getFullYear()} Showcase Submission</b></h2>\r\n\r\n            {this.state.attemptedToSubmit ? <Alert color=\"danger\">Submission failed. All fields are required.</Alert> : ''}\r\n            {\r\n                (!this.state.submitted) ?\r\n            <Form onSubmit={this.validateInput} className=\"form\">\r\n\r\n                <FormGroup >\r\n                    <Label>First Name</Label>\r\n                    <Input invalid={this.state.attemptedToSubmit && this.state.firstName == ''} name=\"firstName\" type=\"text\" placeholder=\"First Name\" value={this.state.firstName} onChange={this.handleChange} />\r\n                    <FormFeedback>This field is required</FormFeedback>\r\n\r\n                </FormGroup>\r\n\r\n                <FormGroup >\r\n                    <Label>Last Name</Label>\r\n                    <Input invalid={this.state.attemptedToSubmit && this.state.lastName == ''} name=\"lastName\" type=\"text\" placeholder=\"Last Name\" value={this.state.lastName} onChange={this.handleChange} />\r\n                    <FormFeedback>This field is required</FormFeedback>\r\n                </FormGroup>\r\n    \r\n                <FormGroup >\r\n                    <Label>NetID</Label>\r\n                    <Input invalid={this.state.attemptedToSubmit && this.state.netId == ''} name=\"netId\" type=\"text\" placeholder=\"NetID\" value={this.state.netId} onChange={this.handleChange} />\r\n                    <FormFeedback >This field is required</FormFeedback>\r\n                </FormGroup>\r\n\r\n                <FormGroup >\r\n                    <Label>Current grade level</Label>\r\n                    <Input invalid={this.state.attemptedToSubmit && this.state.grade == ''} name=\"grade\" type=\"select\" value={this.state.grade} onChange={this.handleChange} placeholder=''>\r\n                        <option></option>\r\n                        <option>First-year</option>\r\n                        <option>Sophomore</option>\r\n                        <option>Junior</option>\r\n                        <option>Senior</option>\r\n                        <option>Graduate/professional</option>\r\n                    </Input>\r\n                    <FormFeedback>This field is required</FormFeedback>\r\n\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label>Upload artwork</Label>\r\n                    <CustomInput invalid={this.state.attemptedToSubmit} type=\"file\" name=\"file\" id=\"file\"onChange={this.handleFiles} />\r\n                    <FormFeedback>File upload required</FormFeedback>\r\n                </FormGroup>\r\n\r\n\r\n                <FormGroup >\r\n                    <Label>Title of work</Label>\r\n                    <Input invalid={this.state.attemptedToSubmit && this.state.title == ''} name=\"title\" type=\"text\" placeholder=\"Title\" value={this.state.title} onChange={this.handleChange} />\r\n                    <FormFeedback>This field is required</FormFeedback>\r\n\r\n                </FormGroup>\r\n\r\n                <FormGroup >\r\n                    <Label>Description</Label>\r\n                    <Input invalid={this.state.attemptedToSubmit && this.state.description== ''} name=\"description\" type=\"textarea\" placeholder=\"Description\" value={this.state.description} onChange={this.handleChange} />\r\n                    <FormFeedback>This field is required</FormFeedback>\r\n\r\n                </FormGroup>\r\n\r\n                <FormGroup >\r\n                    <Label>Medium</Label>\r\n                    <Input invalid={this.state.attemptedToSubmit && this.state.medium == ''} name=\"medium\" type=\"text\" placeholder=\"e.g. digital, screenprint, watercolor, etc.\" value={this.state.medium} onChange={this.handleChange} />\r\n                    <FormFeedback>This field is required</FormFeedback>\r\n\r\n                </FormGroup>\r\n\r\n                <FormGroup >\r\n                    <Label>Dimensions (width x height)</Label>\r\n                    <Input invalid={this.state.attemptedToSubmit && this.state.dimensions == ''} name=\"dimensions\" type=\"text\" placeholder=\"e.g. 10 in. x 16 in.\" value={this.state.dimensions} onChange={this.handleChange} />\r\n                    <FormFeedback>This field is required</FormFeedback>\r\n                </FormGroup>\r\n        \r\n                <FormGroup >\r\n                    <Label>Year of creation</Label>\r\n                    <Input invalid={this.state.attemptedToSubmit && this.state.year == ''} name=\"year\" type=\"year\" placeholder=\"Year\" value={this.state.year} onChange={this.handleChange} />\r\n                    <FormFeedback>This field is required</FormFeedback>\r\n\r\n                </FormGroup>\r\n\r\n            \r\n\r\n                <Button color=\"primary\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n                {\r\n                    (this.state.loading) ? \r\n                    <Spinner color=\"primary\" /> : ''\r\n                }\r\n            </Form>\r\n            :\r\n            <SubmissionSuccess name={this.state.firstName}/>\r\n            }\r\n        </div>\r\n        \r\n    );\r\n  }\r\n}\r\n\r\nexport default SubmissionForm;\r\n","import React from 'react';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport firebaseApp from '../firebaseConfig';\r\n\r\nclass VotingAllSubmissions extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.currentUser = this.props.user;\r\n        this.state = {\r\n            submissions: []\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        const submissionsRef = firebaseApp.database().ref('submissions');\r\n        const voterRef = firebaseApp.database().ref(`voters/${this.currentUser.uid}/votes`);\r\n        \r\n        var dataArr = [];\r\n        submissionsRef.on('value', (snapshot) => {\r\n            let submissions = snapshot.val();\r\n            voterRef.on('value', (snap) =>{\r\n                let votesObj = snap.val();\r\n                for (let submission in submissions){\r\n                    var dataObj = {\r\n                        id: submission,\r\n                        title: submissions[submission].title,\r\n                        description: submissions[submission].description,\r\n                        url: submissions[submission].url,\r\n                        userVote: votesObj[submission]\r\n                    }\r\n\r\n                    dataArr.push(dataObj);\r\n                }\r\n            });\r\n        });\r\n        this.setState({submissions: dataArr});\r\n\r\n    }\r\n\r\n    imgFormatter(cell, row) {\r\n        return (\r\n            <a href={row.url} target=\"_blank\">\r\n                            <img  src={row.url} width=\"auto\" height=\"50\"/>\r\n                           </a>\r\n        );\r\n      }\r\n\r\n    render(){\r\n        const columns = [{\r\n            dataField: 'url',\r\n            text: 'Image',\r\n            formatter: this.imgFormatter\r\n        },{\r\n            dataField: 'title',\r\n            text: 'Title',\r\n            sort: true\r\n          }, {\r\n            dataField: 'description',\r\n            text: 'Description',\r\n            sort: true\r\n          }, {\r\n            dataField: 'userVote',\r\n            text: 'Your vote',\r\n            sort: true\r\n          }];\r\n          \r\n          const defaultSorted = [{\r\n            dataField: 'userVote',\r\n            order: 'desc'\r\n          }];\r\n\r\n        return(\r\n            <BootstrapTable\r\n                bootstrap4\r\n                hover\r\n                keyField=\"id\"\r\n                data={ this.state.submissions }\r\n                columns={ columns }\r\n                defaultSorted={ defaultSorted } \r\n                headerClasses=\"header-class\"\r\n\r\n            />\r\n        \r\n        );\r\n    }\r\n\r\n}\r\nexport default VotingAllSubmissions;","import React from 'react';\r\nimport firebase from 'firebase/app';\r\nimport firebaseApp from '../firebaseConfig';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nimport { ButtonGroup, Spinner, Button, Form, FormGroup, Label, Input, Container } from 'reactstrap';\r\nimport Rating from 'react-rating';\r\nimport VotingAllSubmissions from './VotingAllSubmissions';\r\n\r\n\r\nconst initialState = {\r\n    submissions: [],\r\n    unvotedSubmissions: [],\r\n    currentSubmission: {},\r\n    currentVote: null,\r\n    unVotedOn: true\r\n};\r\n\r\nclass VotingMain extends React.Component{\r\n    \r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = initialState;\r\n\r\n        this.currentUser = this.props.user;\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChangeVote = this.handleChangeVote.bind(this);\r\n        this.handleNext = this.handleNext.bind(this);\r\n        this.handlePrevious = this.handlePrevious.bind(this);\r\n\r\n        this.handleUnvotedOnState = this.handleUnvotedOnState.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(\"Component mounted\");\r\n        const submissionsRef = firebaseApp.database().ref('submissions');\r\n        const voterRef = firebaseApp.database().ref(`voters/${this.currentUser.uid}/votes`)\r\n        voterRef.on('value', (snapshot) => console.log(\"VOTE\", snapshot.val()));\r\n        \r\n        submissionsRef.on('value', (snapshot) => {\r\n            let submissions = snapshot.val();\r\n            let newState = [];\r\n            let unvotedState = [];\r\n            for (let submission in submissions){\r\n\r\n                var objToAdd = {...submissions[submission], ...{id: submission}};\r\n                newState.push(objToAdd);\r\n\r\n                voterRef.on('value', (snap) => {\r\n                    if ((snap.val() == null) || !(submission in snap.val())){\r\n                        unvotedState.push(objToAdd);\r\n                    }\r\n                })\r\n                \r\n            }\r\n\r\n            this.setState({\r\n                submissions: newState,\r\n                unvotedSubmissions: unvotedState,\r\n                currentSubmission: unvotedState[0]\r\n            });\r\n\r\n\r\n        });\r\n    }\r\n\r\n    handleUnvotedOnState(event){\r\n        if (event.target.textContent == 'All submissions'){\r\n            this.setState({\r\n                unVotedOn: false\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                unVotedOn: true\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n\r\n        var votersRef = firebaseApp.database().ref(`voters/${this.currentUser.uid}/votes`);\r\n        var vote = {\r\n            [this.state.currentSubmission.id]: this.state.currentVote \r\n        };\r\n\r\n        var newUnvotedArr = [...this.state.unvotedSubmissions];\r\n        var indexToRemove = newUnvotedArr.indexOf(this.state.currentSubmission);\r\n\r\n        if (indexToRemove > -1){\r\n            newUnvotedArr.splice(indexToRemove, 1)\r\n            this.setState({\r\n                    unvotedSubmissions: newUnvotedArr\r\n                }, () => {\r\n\r\n                if (this.state.unvotedSubmissions.length == 0){\r\n                    this.setState({currentSubmission: null});\r\n                }\r\n                else{\r\n                    if (!this.handleNext()){\r\n                        this.handlePrevious();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        votersRef.update(vote).then(() => console.log('Pushed vote successful', this.state.currentVote));\r\n    }\r\n\r\n    handleNext(event){\r\n        var index = this.state.unvotedSubmissions.indexOf(this.state.currentSubmission);\r\n        if(index + 1 >= 0 && index + 1 < this.state.unvotedSubmissions.length){\r\n            this.setState({\r\n                currentSubmission: this.state.unvotedSubmissions[index + 1],\r\n                currentVote: null\r\n\r\n            });\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    handlePrevious(event){\r\n        var index = this.state.unvotedSubmissions.indexOf(this.state.currentSubmission);\r\n        if(index - 1 >= 0 && index - 1 < this.state.unvotedSubmissions.length){\r\n            this.setState({\r\n                currentSubmission: this.state.unvotedSubmissions[index - 1],\r\n                currentVote: null\r\n            });\r\n            return true;\r\n        }\r\n        return false;\r\n\r\n    }\r\n\r\n    handleChangeVote(value){\r\n        this.setState({\r\n            currentVote: value\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.currentSubmission == null){\r\n            return (<h4>Hello, {this.currentUser.displayName}! There are no more submissions to rate at this time.</h4>);\r\n        }\r\n        if (this.state.unVotedOn == false){\r\n            return (\r\n                <div>\r\n                    <ButtonGroup>\r\n                        <Button outline color=\"primary\" onClick={this.handleUnvotedOnState} active={this.state.unVotedOn == false}>All submissions</Button>\r\n                        <Button outline color=\"primary\" onClick={this.handleUnvotedOnState} active={this.state.unVotedOn == true}>Unvoted</Button>\r\n                    </ButtonGroup>\r\n                    <VotingAllSubmissions user={this.currentUser}/>\r\n\r\n                </div>\r\n            );\r\n        }\r\n        return(\r\n            <div>\r\n                <ButtonGroup>\r\n                    <Button outline color=\"primary\" onClick={this.handleUnvotedOnState} active={this.state.unVotedOn == false}>All submissions</Button>\r\n                    <Button outline color=\"primary\" onClick={this.handleUnvotedOnState} active={this.state.unVotedOn == true}>Unvoted</Button>\r\n                </ButtonGroup>\r\n                \r\n                <div>\r\n                <h3>Hello, {this.currentUser.displayName}! Please submit a vote for the following {this.state.unvotedSubmissions.length} submission(s).</h3>\r\n                <div className=\"inline\">\r\n                    <Button outline color=\"secondary\" onClick={this.handlePrevious}>Previous</Button>\r\n                    {/* <h4>{this.state.unvotedSubmissions.indexOf(this.state.currentSubmission)+1}/{this.state.unvotedSubmissions.length}</h4> */}\r\n                    <Button outline color=\"secondary\" onClick={this.handleNext}>Next</Button>\r\n                </div>\r\n                <a href={this.state.currentSubmission.url} target=\"_blank\">\r\n                        <img src={this.state.currentSubmission.url} height=\"200\"/>\r\n                    </a>\r\n                <div className=\"containerVoting\">\r\n                    \r\n                    <p><i>(Click to enlarge)</i></p>\r\n                    <div align=\"left\">\r\n                        <p><b>Title:</b> {this.state.currentSubmission.title}</p>\r\n                        <p><b>Description:</b> {this.state.currentSubmission.description}</p>\r\n                        <p><b>Medium:</b> {this.state.currentSubmission.medium}</p>\r\n                        <p><b>Dimensions:</b> {this.state.currentSubmission.dimensions}</p>\r\n                        <p><b>Your vote:</b> <Rating placeholderRating={this.state.currentVote} onChange={this.handleChangeVote}/></p>\r\n                    </div>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <Button color=\"primary\" type=\"submit\">Submit Vote</Button>\r\n\r\n                    </Form>\r\n                    {/* <button onClick={() => {console.log(this.state)}}>Get the fuckin state</button> */}\r\n                \r\n                </div>\r\n                </div>\r\n                \r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default VotingMain;","import React from 'react';\r\nimport VotingMain from './VotingMain';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport withFirebaseAuth from 'react-with-firebase-auth';\r\nimport firebaseApp from '../firebaseConfig';\r\nimport { Button } from 'reactstrap';\r\n\r\n\r\nconst firebaseAppAuth = firebaseApp.auth();\r\n\r\nconst providers = {\r\n    googleProvider: new firebase.auth.GoogleAuthProvider()\r\n};\r\n\r\n\r\nclass VotingSignIn extends React.Component {\r\n    render(){\r\n        const {user, signOut, signInWithGoogle} = this.props;\r\n        return(\r\n            <div>\r\n                <h2 align=\"center\"><b>VisArts Spring Showcase Voting</b></h2>\r\n\r\n                {\r\n                user ?\r\n                <div>\r\n                    <Button style={{position: \"absolute\", top: 0, right: 0}} outline color=\"danger\" onClick={signOut}>Sign out</Button>\r\n                </div>\r\n                : ''\r\n                } \r\n\r\n                <div align=\"center\">\r\n                {\r\n                    user \r\n                    ?\r\n                    <div>\r\n                        <VotingMain user={user}/>\r\n                    </div>\r\n                    : \r\n                    (\r\n                        <div className=\"centerPage\">\r\n                        <h5>For VisArts Committee Members only - please sign in to vote.</h5> \r\n                        <Button outline color=\"primary\" onClick={signInWithGoogle}>Sign in with Google</Button>\r\n                        </div>\r\n                    )   \r\n                }\r\n\r\n                {/* {\r\n                    user\r\n                    ? <button onClick={signOut}>Sign out</button>\r\n                    : <Button outline color=\"primary\" onClick={signInWithGoogle}>Sign in with Google</Button>\r\n                } */}\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default withFirebaseAuth({\r\n    providers,\r\n    firebaseAppAuth\r\n})(VotingSignIn);","import React from 'react';\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\n\r\n\r\nimport firebaseApp from '../firebaseConfig';\r\nimport { Spinner, Button } from 'reactstrap';\r\n\r\n\r\nclass AdminMain extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data: {},\r\n            submissions: [],\r\n            loading: true\r\n        }\r\n\r\n        this.deleteAllSubmissions = this.deleteAllSubmissions.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n      console.log(\"AdminMain component mounted\");\r\n        const submissionsRef = firebaseApp.database().ref('submissions');\r\n        const votersRef = firebaseApp.database().ref('voters');\r\n\r\n        var dataBuild = {};\r\n\r\n        submissionsRef.on('value', (snapshot) => {\r\n            let submissions = snapshot.val();\r\n            var dataBuild = {};\r\n\r\n            for (let submission in submissions){\r\n                dataBuild[submission] = {\r\n                    votes: [],\r\n                    title: submissions[submission].title,\r\n                    description: submissions[submission].description,\r\n                    url: submissions[submission].url,\r\n                    firstName: submissions[submission].firstName,\r\n                    lastName: submissions[submission].lastName,\r\n                    id: submission\r\n                };\r\n\r\n                votersRef.on('value', (snap) => {\r\n                    let allVoters = snap.val();\r\n\r\n                    for (let voter in allVoters){\r\n                        var voterRef = firebaseApp.database().ref(`voters/${voter}/votes`);\r\n\r\n                        voterRef.on('value', (snp) => {\r\n                            let votes = snp.val();\r\n                            if (submission in votes){ //If this submission has been voted by voter\r\n                                const voteValue = votes[submission];\r\n                                dataBuild[submission].votes.push(voteValue);\r\n                            }\r\n                            \r\n                        });\r\n                    }\r\n                });\r\n                this.setState({\r\n                    data: dataBuild\r\n                });\r\n            }\r\n\r\n            var submissionsArr = [];\r\n            Object.keys(this.state.data).forEach(submission => {\r\n                submissionsArr.push(this.state.data[submission])\r\n            });   \r\n            this.setState({\r\n                submissions: submissionsArr\r\n            }, () => {\r\n              this.setState({loading: false});\r\n              console.log(\"finished\", this.state.submissions);\r\n            });\r\n        });\r\n\r\n        \r\n    }\r\n\r\n    imgFormatter(cell, row) {\r\n      return (\r\n          <a href={row.url} target=\"_blank\">\r\n                          <img  src={row.url} width=\"auto\" height=\"50\"/>\r\n                         </a>\r\n      );\r\n    }\r\n\r\n    totalFormatter(cell, row){\r\n      return(<div>{row.votes.length}</div>);\r\n    }\r\n\r\n    deleteAllSubmissions(){\r\n      alert(\"hello\");\r\n    }\r\n\r\n    render(){\r\n      // var allSubmissions = this.state.submissions;\r\n      // allSubmissions = allSubmissions.map(row => {\r\n      //   row.totalVotes = row.votes.length;\r\n      //   return row;\r\n      // });\r\n      const columns = [{\r\n        dataField: 'url',\r\n        text: 'Image',\r\n        formatter: this.imgFormatter\r\n    },{\r\n        dataField: 'title',\r\n        text: 'Title',\r\n        sort: true\r\n      }, {\r\n        dataField: 'description',\r\n        text: 'Description',\r\n        sort: true\r\n      }, {\r\n        dataField: 'firstName',\r\n        text: 'First Name',\r\n        sort: true\r\n      }, {\r\n        dataField: 'lastName',\r\n        text: 'Last Name',\r\n        sort: true\r\n      },{\r\n        dataField: 'votes',\r\n        text: 'Total votes',\r\n        sort: true,\r\n        formatter: this.totalFormatter\r\n      }, {\r\n        dataField: '',\r\n        text: 'Averate rating',\r\n        sort: true\r\n      },{\r\n        dataField: '',\r\n        text: 'Median rating',\r\n        sort: true\r\n      }];\r\n      \r\n      const defaultSorted = [{\r\n        dataField: 'userVote',\r\n        order: 'desc'\r\n      }];\r\n\r\n        if (this.state.loading){\r\n          return (<Spinner color=\"primary\"></Spinner>);\r\n        }\r\n        \r\n        return (\r\n          <div>\r\n          <BootstrapTable\r\n            bootstrap4\r\n            hover\r\n            keyField=\"id\"\r\n            data={ this.state.submissions }\r\n            columns={ columns }\r\n            defaultSorted={ defaultSorted } \r\n            headerClasses=\"header-class\"\r\n\r\n          />\r\n          <Button onClick={this.deleteAllSubmissions} color=\"danger\">DELETE ALL SUBMISSIONS</Button>\r\n          <button onClick={() => console.log(this.state)}>STATE</button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n}\r\nexport default AdminMain;","import React from 'react';\r\nimport AdminMain from './AdminMain';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport withFirebaseAuth from 'react-with-firebase-auth';\r\nimport firebaseApp from '../firebaseConfig';\r\nimport { Button } from 'reactstrap';\r\n\r\n\r\nconst firebaseAppAuth = firebaseApp.auth();\r\n\r\nconst providers = {\r\n    googleProvider: new firebase.auth.GoogleAuthProvider()\r\n};\r\n\r\n\r\nclass AdminSignIn extends React.Component {\r\n    render(){\r\n        const {user, signOut, signInWithGoogle} = this.props;\r\n        return(\r\n            <div>\r\n                <h2 align=\"center\"><b>VisArts Spring Showcase Admin</b></h2>\r\n\r\n                {\r\n                user ?\r\n                <div>\r\n                    <Button style={{position: \"absolute\", top: 0, right: 0}} outline color=\"danger\" onClick={signOut}>Sign out</Button>\r\n                </div>\r\n                : ''\r\n                } \r\n\r\n                <div align=\"center\">\r\n                {\r\n                    user \r\n                    ?\r\n                    <div>\r\n                        <AdminMain user={user}/>\r\n                    </div>\r\n                    : \r\n                    (\r\n                        <div className=\"centerPage\">\r\n                        <h5>For VisArts Committee Chair only - please sign in.</h5> \r\n                        <Button outline color=\"primary\" onClick={signInWithGoogle}>Sign in with Google</Button>\r\n                        </div>\r\n                    )   \r\n                }\r\n\r\n                {/* {\r\n                    user\r\n                    ? <button onClick={signOut}>Sign out</button>\r\n                    : <Button outline color=\"primary\" onClick={signInWithGoogle}>Sign in with Google</Button>\r\n                } */}\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default withFirebaseAuth({\r\n    providers,\r\n    firebaseAppAuth\r\n})(AdminSignIn);","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { HashRouter, Route, Link } from 'react-router-dom';\nimport SubmissionForm from './Components/SubmissionForm';\nimport VotingSignIn from './Components/VotingSignIn';\nimport AdminSignIn from './Components/AdminSignIn';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App-style\">\n\n      <HashRouter basename='/'>\n          <Route exact path=\"/\" component={SubmissionForm} />\n          <Route path=\"/voting\" component={VotingSignIn} />\n          <Route path=\"/admin\" component={AdminSignIn} />\n      </HashRouter>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport VotingSignIn from './Components/VotingSignIn';\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom';\n\n// const routing = (\n//     <Router>\n//       <div>\n//         <Route path=\"/\" component={App} />\n//         <Route path=\"/voting\" component={VotingSignIn} />\n//       </div>\n//     </Router>\n//   )\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}